
services:
  db:
    build:
      context: ./db
    environment:
      - DB_NAMES=mlflow
    command: ./entrypoints.sh
    # command: tail -f /dev/null
    ports:
      # For login from outside container, use 1430
      # From other containers in the same network, do db:1433
      - "${PORT_DB:-1433}:1433"
    volumes:
      - db-data:/var/opt/mssql/data
    healthcheck:
      test: [
        "CMD", "/opt/mssql-tools18/bin/sqlcmd",
        "-S", "localhost",
        "-U", "sa",
        "-P", "Password123",
        "-Q", "IF DB_ID('mlpreds') IS NULL BEGIN RAISERROR('Database not found', 16, 1) END;",
        "-C"
      ]
      interval: 10s
      timeout: 30s
      retries: 30
    networks:
      - default

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web console
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - minio:/data

  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 minio minio12345 &&
      mc mb -p local/mlflow || true &&
      mc anonymous set public local/mlflow || true
      "
    restart: "no"

  mlflow:
    build:
      context: ./mlflow
    depends_on:
      db:
        condition: service_healthy
      createbuckets:
        condition: service_completed_successfully
    environment:
      # DB (backend store)
      MLFLOW_BACKEND_STORE_URI: mssql+pyodbc://sa:Password123@db:1433/mlflow?driver=ODBC+Driver+18+for+SQL+Server&TrustServerCertificate=yes
      # Artifacts (MinIO as S3)
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio12345
    command: ["/entrypoint.sh"]
    ports:
      - "5000:5000"

volumes:
  db-data:
  minio:
